def caesar_cipher(text: str, shift: int, mode: str) -> str:
    """
    Apply a Caesar cipher to text with given shift.
    mode: 'encode' to shift forward, 'decode' to shift backward.
    Only letters are shifted; all other characters (including digits) pass through unchanged.
    """
    result = []
    for char in text:
        if char.isalpha():
            # Choose ASCII base depending on uppercase vs lowercase
            base = ord('A') if char.isupper() else ord('a')
            alpha_index = ord(char) - base
            if mode == 'encode':
                new_index = (alpha_index + shift) % 26
            else:  # decode
                new_index = (alpha_index - shift) % 26
            result.append(chr(base + new_index))
        else:
            # leave digits, spaces, punctuation, etc. unchanged
            result.append(char)
    return ''.join(result)

def main():
    # 1. Ask encode/decode
    mode = input("Would you like to encode or decode? ").strip().lower()
    while mode not in ('encode', 'decode'):
        mode = input("Please type 'encode' or 'decode': ").strip().lower()

    # 2. Ask shift amount
    while True:
        try:
            shift = int(input("Enter the shift amount (number of spaces): ").strip())
            break
        except ValueError:
            print("Invalid number. Please enter an integer.")

    # 3. Ask for the message
    message = input(f"Enter the message to {mode}: ")

    # 4. Perform transformation
    output = caesar_cipher(message, shift, mode)
    print(f"\nResult:\n{output}")

if __name__ == "__main__":
    main()
